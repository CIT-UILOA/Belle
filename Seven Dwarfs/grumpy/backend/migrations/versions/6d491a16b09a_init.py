"""init

Revision ID: 6d491a16b09a
Revises: 
Create Date: 2025-08-30 15:21:13.059029

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6d491a16b09a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('map',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('x', sa.Integer(), nullable=False),
    sa.Column('y', sa.Integer(), nullable=False),
    sa.Column('z', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_index(op.f('ix_map_name'), 'map', ['name'], unique=False)
    op.create_table('robots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('IDLE', 'UNAVAILABLE', 'TRAVELING', 'AWAITING', 'ERROR', name='robotstatus'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('robot_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['robot_id'], ['robots.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('patients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('location', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['location'], ['map.name'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('robot_positions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('robot_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('x', sa.Integer(), nullable=False),
    sa.Column('y', sa.Integer(), nullable=False),
    sa.Column('z', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['robot_id'], ['robots.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_robot_positions_id'), 'robot_positions', ['id'], unique=False)
    op.create_table('schedules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient', sa.Integer(), nullable=False),
    sa.Column('time', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['patient'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('travels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('robot_id', sa.Integer(), nullable=False),
    sa.Column('origin', sa.String(), nullable=False),
    sa.Column('target', sa.String(), nullable=False),
    sa.Column('patient', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['origin'], ['map.name'], ),
    sa.ForeignKeyConstraint(['patient'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['robot_id'], ['robots.id'], ),
    sa.ForeignKeyConstraint(['target'], ['map.name'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('telemetry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('schedule', sa.Integer(), nullable=False),
    sa.Column('schedule_status', sa.Enum('SUCCESS', 'FAILED', name='schedulestatusenum'), nullable=False),
    sa.ForeignKeyConstraint(['schedule'], ['schedules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('telemetry')
    op.drop_table('travels')
    op.drop_table('schedules')
    op.drop_index(op.f('ix_robot_positions_id'), table_name='robot_positions')
    op.drop_table('robot_positions')
    op.drop_table('patients')
    op.drop_table('metrics')
    op.drop_table('robots')
    op.drop_index(op.f('ix_map_name'), table_name='map')
    op.drop_table('map')
    # ### end Alembic commands ###
